#!/bin/bash

# Run Khiops tool

# If they are not already defined, these variables are set :
#
# KHIOPS_PROC_NUMBER : process number launched by Khiops (it's default value corresponds to the number of physycal cores of the computer)
# KHIOPS_LAST_RUN_DIR : directory where Khiops writes output command file and log (when not define with -e and -o)
# KHIOPS_LICENSE_FILE_DIR : directory of the Khiops license file
# KHIOPS_LICENSE_FILE_NAME : name of the Khiops license file
# JAVA_HOME : Java directory

#############################
# Setting Khiops environment
#############################

if [[ -z $KHIOPS_LAST_RUN_DIR ]]; then
    KHIOPS_LAST_RUN_DIR=/tmp/khiops/$USER
fi

if [[ ! -d $KHIOPS_LAST_RUN_DIR ]]; then
    mkdir -p "$KHIOPS_LAST_RUN_DIR"
fi

# Java configuration
# JAVA_HOME automatic setting

if [[ -n $JAVA_HOME ]]; then
    export CLASSPATH=/usr/share/khiops/norm.jar:/usr/share/khiops/khiops.jar
    LIBJVM=$(find -L "$JAVA_HOME" -name libjvm.so | xargs dirname)
fi

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$LIBJVM

###############################
# Licence management parameters
###############################

# Licence directory
if [[ -z $KHIOPS_LICENSE_FILE_DIR ]]; then
    export KHIOPS_LICENSE_FILE_DIR=@LICENSE_DIR@
fi

# Licence file
if [[ -z "$KHIOPS_LICENSE_FILE_NAME" ]]
then
    export KHIOPS_LICENSE_FILE_NAME=khiops-license-@LICENSE_NUMBER@.lic
fi

#########################
# Parallel configuration
#########################

# Number of processes in use (must be set according to the physical cores number + 1)
if [[ -z $KHIOPS_PROC_NUMBER ]]; then
    KHIOPS_PROC_NUMBER=$(( $(lscpu -b -p=Core,Socket | grep -v '^#' | sort -u | wc -l) + 1 ))
fi

# Try to use environment modules to locate mpiexec if needed
if ! command -v mpiexec &> /dev/null
then
    if source /etc/profile.d/modules.sh &> /dev/null
    then
         # find the good module
        mpich_module="$(module avail |& sed -E -e 's/[[:blank:]]+/\n/g' | grep  mpich-[0-9] | grep $(arch) | sort | tail -n 1)"
        if [ -z "$mpich_module" ] ; then
            mpich_module=$(module avail |& sed -E -e 's/[[:blank:]]+/\n/g' | grep  mpich-$(arch))
        fi
    
        # and load it
        module unload mpi
        module load "$mpich_module"
    fi
fi

if command -v mpiexec &> /dev/null
then
    MPI_COMMAND="mpiexec -bind-to hwthread -map-by core -n $KHIOPS_PROC_NUMBER"
else
    echo "We didn't find mpiexec in the regular path, please set MPICH_BIN according to the mpich installation"
    echo "Run Khiops in serial"
    MPI_COMMAND="" 
fi

# without more than 2 procs, we use the serial khiops
if [[ $KHIOPS_PROC_NUMBER -le 2 ]]; then
    MPI_COMMAND=""
fi

##############################################
# Run Khiops (with or without parameters)
##############################################


if [[  $# -eq 0  ]]
then
    # run without parameters
    # run and save scenario and log files in directory KHIOPS_LAST_RUN_DIR
    ${MPI_COMMAND} MODL -o "$KHIOPS_LAST_RUN_DIR/scenario._kh" -e "$KHIOPS_LAST_RUN_DIR/log.txt"
else
    # run with parameters
    ${MPI_COMMAND} MODL "$@"
fi

exit $?
