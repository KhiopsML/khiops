---
name: RPM Packages
on:
  workflow_dispatch:
    inputs:
      mpi_implementation:
        description: mpi implementation
        type: choice
        default: openmpi
        options: [mpich, openmpi]
  pull_request:
    paths: ['**CMakeLists.txt', '**.cmake', .github/workflows/pack-rpm.yml]
  push:
    tags: ['*']
# Cancel any ongoing run of this workflow on the same PR or ref
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref
    }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: [rocky8, rocky9]
    container:
      image: ghcr.io/khiopsml/khiops/khiopsdev-${{ matrix.os }}:latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Check the tag consistency with the source version
        if: github.ref_type == 'tag'
        uses: ./.github/actions/check-tag-version
      - name: Put OS info on the environment
        run: |
          source /etc/os-release
          echo "ID=$ID" >> "$GITHUB_ENV"
          VERSION_CODENAME=$(echo $PLATFORM_ID | cut -d":" -f2)
          echo "VERSION_CODENAME=$VERSION_CODENAME" >> "$GITHUB_ENV"
          echo "MPI_IMPLEMENTATION=${{ inputs.mpi_implementation || 'openmpi' }}" >> "$GITHUB_ENV"
      - name: Configure CMake
        run: |
          source /etc/profile.d/modules.sh
          module unload mpi
          module load mpi/${MPI_IMPLEMENTATION}-x86_64
          cmake --preset linux-gcc-release -DBUILD_JARS=ON  -DTESTING=OFF
      - name: Build Khiops binaries
        run: |
          cmake --build --preset linux-gcc-release --parallel \
            --target MODL MODL_Coclustering KhiopsNativeInterface KNITransfer norm_jar khiops_jar
      - name: Build package with CPack
        run: cd build/linux-gcc-release && cpack -G RPM
      - name: Rename packages with codename
        run: |
          source /etc/os-release
          ARCH=$(arch)
          cd build/linux-gcc-release/packages
          for filename in *.rpm
          do
            mv -v $filename ${filename%.${ARCH}*}.${{ env.VERSION_CODENAME }}.${ARCH}.rpm
          done
      - name: Upload the packages as artifacts
        uses: actions/upload-artifact@v4
        with:
          # We add a `rpm-` prefix so we can later recover all artifacts with the pattern `rpm-*`
          # Note: The more natural pattern `*-rpm` or `*` does not work
          name: rpm-${{ env.ID }}-${{ env.VERSION_CODENAME }}
          path: build/linux-gcc-release/packages/*.rpm
          if-no-files-found: error
  # Test packages on a brand new runner to check:
  # - the installation process (including dependencies installation)
  # - that executable works (run with -v)
  # - that it executes a small test
  test:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        rocky_version: [8, 9]
    container:
      image: rockylinux:${{ matrix.rocky_version }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Set environment variables
        run: |
          source /etc/os-release
          echo "ID=$ID" >> "$GITHUB_ENV"
          VERSION=$(echo $PLATFORM_ID | cut -d":" -f2)
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "MPI_IMPLEMENTATION=${{ inputs.mpi_implementation || 'openmpi' }}" >> "$GITHUB_ENV"
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: rpm-${{ env.ID }}-${{ env.VERSION }}
          path: artifacts
      - run: yum update -y
      - name: Install Khiops core
        run: |
          yum install -y ./artifacts/khiops-core*
      - name: Check Khiops core installation
        uses: ./.github/actions/test-khiops-install
      - name: Install Khiops Desktop (with java)
        run: |
          yum install -y ./artifacts/khiops-*
      - name: Check Khiops installation
        uses: ./.github/actions/test-khiops-install
      - name: Test Khiops on Iris dataset
        uses: ./.github/actions/test-khiops-on-iris
  test-kni:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: [rocky8, rocky9]
    container:
      image: ghcr.io/khiopsml/khiops/khiopsdev-${{ matrix.os }}:latest
    steps:
      - name: Put OS info on the environment
        run: |
          source /etc/os-release
          echo "ID=$ID" >> "$GITHUB_ENV"
          VERSION=$(echo $PLATFORM_ID | cut -d":" -f2)
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: rpm-${{ env.ID }}-${{ env.VERSION }}
          path: artifacts
      - name: Install KNI Package
        run: |
          yum update -y
          yum install -y ./artifacts/kni*
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github
      - name: Test KNI package
        uses: ./.github/actions/test-kni
  # Release is only executed on tags
  release:
    if: github.ref_type == 'tag'
    # We release even if the tests fail (we delete from the release whatever fails manually)
    needs: build
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Download package artifacts
        uses: actions/download-artifact@v4
        with:
          # See the upload-artifact step in the build job for the explanation of this pattern
          pattern: rpm-*
          merge-multiple: true
      - name: Rename packages with tag version
        run: |
          # Renames the packge only if the source version differs from the tag
          SOURCE_VERSION=$(./scripts/khiops-version | sed 's/-/_/')
          TAG_VERSION=$(echo "${{ github.ref_name }}" | sed 's/-/_/')
          for PKG_FILE in *.rpm
          do
            NEW_PKG_FILE=$(echo $PKG_FILE | sed "s/-${SOURCE_VERSION}-/-${TAG_VERSION}-/")
            if [[ "$PKG_FILE" != "$NEW_PKG_FILE" ]]
            then
              echo "Renaming '$PKG_FILE' to '$NEW_PKG_FILE'"
              mv $PKG_FILE $NEW_PKG_FILE
            fi
          done
      - name: Upload packages to the release
        uses: ncipollo/release-action@v1.14.0
        with:
          allowUpdates: true
          artifacts: '*.rpm'
          body: |
            **This release is for testing purposes only and there is no support for it.**
            **Go to https://khiops.org to install the latest supported version.**
          draft: false
          makeLatest: false
          prerelease: true
          updateOnlyUnreleased: true
