{
	"tool": "Khiops",
	"version": "10.5.2-b.0",
	"shortDescription": "",
	"modelingReport": {
		"reportType": "Modeling",
		"summary": {
			"dictionary": "SpliceJunction",
			"database": "..\/..\/..\/MTdatasets\/SpliceJunction\/SpliceJunction.txt",
			"samplePercentage": 10,
			"samplingMode": "Include sample",
			"selectionVariable": "",
			"selectionValue": "",
			"learningTask": "Classification analysis",
			"targetVariable": "Class"
		},
		"trainedPredictors": [
			{
				"rank": "R1",
				"type": "Classifier",
				"family": "Selective Naive Bayes",
				"name": "Selective Naive Bayes",
				"variables": 8
			}
		],
		"trainedPredictorsDetails": {
			"R1": {
				"selectedVariables": [
					{
						"preparedName": "PMode(DNA.Char) where Pos <= 30.5",
						"name": "Mode(DNA.Char) where Pos <= 30.5",
						"level": 0.0731216,
						"weight": 0.347656,
						"importance": 0.15944
					},
					{
						"preparedName": "PMode(DNA.Char) where Pos in ]15.5, 30.5]",
						"name": "Mode(DNA.Char) where Pos in ]15.5, 30.5]",
						"level": 0.0495677,
						"weight": 0.441406,
						"importance": 0.147917
					},
					{
						"preparedName": "PMode(DNA.Char)",
						"name": "Mode(DNA.Char)",
						"level": 0.0447911,
						"weight": 0.457031,
						"importance": 0.143077
					},
					{
						"preparedName": "PMedian(DNA.Pos) where Char = G",
						"name": "Median(DNA.Pos) where Char = G",
						"level": 0.0212659,
						"weight": 0.425781,
						"importance": 0.0951557
					},
					{
						"preparedName": "PMean(DNA.Pos) where Char = G",
						"name": "Mean(DNA.Pos) where Char = G",
						"level": 0.0261259,
						"weight": 0.269531,
						"importance": 0.0839152
					},
					{
						"preparedName": "PCount(DNA) where Char = G",
						"name": "Count(DNA) where Char = G",
						"level": 0.0147548,
						"weight": 0.347656,
						"importance": 0.0716213
					},
					{
						"preparedName": "PMedian(DNA.Pos) where Char = C",
						"name": "Median(DNA.Pos) where Char = C",
						"level": 0.00882745,
						"weight": 0.300781,
						"importance": 0.051528
					},
					{
						"preparedName": "PTree_1",
						"name": "Tree_1",
						"level": 0.0257056,
						"weight": 0.0351562,
						"importance": 0.0300618
					}
				]
			}
		}
	},
	"trainEvaluationReport": {
		"reportType": "Evaluation",
		"evaluationType": "Train",
		"summary": {
			"dictionary": "SpliceJunction",
			"database": "..\/..\/..\/MTdatasets\/SpliceJunction\/SpliceJunction.txt",
			"samplePercentage": 10,
			"samplingMode": "Include sample",
			"selectionVariable": "",
			"selectionValue": "",
			"instances": 303,
			"learningTask": "Classification analysis",
			"targetVariable": "Class"
		},
		"predictorsPerformance": [
			{
				"rank": "R1",
				"type": "Classifier",
				"family": "Selective Naive Bayes",
				"name": "Selective Naive Bayes",
				"accuracy": 0.646865,
				"compression": 0.266328,
				"auc": 0.788243
			}
		],
		"predictorsDetailedPerformance": {
			"R1": {
				"confusionMatrix": {
					"values": ["EI","IE","N"],
					"matrix": [
						[7,1,2],
						[5,42,18],
						[55,26,147]
					]
				}
			}
		},
		"liftCurves": [
			{
				"targetValue": "EI",
				"curves": [
					{
						"classifier": "Optimal",
						"values": [0,0.452239,0.904478,1.35672,1.80896,2.26119,2.71343,3.16567,3.61791,4.07015,4.52239,4.97463,5.42687,5.8791,6.33134,6.78358,7.23582,7.68806,8.1403,8.59254,9.04478,9.49701,9.94925,10.4015,10.8537,11.306,11.7582,12.2104,12.6627,13.1149,13.5672,14.0194,14.4716,14.9239,15.3761,15.8284,16.2806,16.7328,17.1851,17.6373,18.0896,18.5418,18.994,19.4463,19.8985,20.3507,20.803,21.2552,21.7075,22.1597,22.6119,23.0642,23.5164,23.9687,24.4209,24.8731,25.3254,25.7776,26.2299,26.6821,27.1343,27.5866,28.0388,28.491,28.9433,29.3955,29.8478,30.3,30.7522,31.2045,31.6567,32.109,32.5612,33.0134,33.4657,33.9179,34.3701,34.8224,35.2746,35.7269,36.1791,36.6313,37.0836,37.5358,37.9881,38.4403,38.8925,39.3448,39.797,40.2493,40.7015,41.1537,41.606,42.0582,42.5104,42.9627,43.4149,43.8672,44.3194,44.7716,45.2239,45.6761,46.1284,46.5806,47.0328,47.4851,47.9373,48.3896,48.8418,49.294,49.7463,50.1985,50.6507,51.103,51.5552,52.0075,52.4597,52.9119,53.3642,53.8164,54.2687,54.7209,55.1731,55.6254,56.0776,56.5299,56.9821,57.4343,57.8866,58.3388,58.791,59.2433,59.6955,60.1478,60.6,61.0522,61.5045,61.9567,62.409,62.8612,63.3134,63.7657,64.2179,64.6701,65.1224,65.5746,66.0269,66.4791,66.9313,67.3836,67.8358,68.2881,68.7403,69.1925,69.6448,70.097,70.5493,71.0015,71.4537,71.906,72.3582,72.8104,73.2627,73.7149,74.1672,74.6194,75.0716,75.5239,75.9761,76.4284,76.8806,77.3328,77.7851,78.2373,78.6896,79.1418,79.594,80.0463,80.4985,80.9507,81.403,81.8552,82.3075,82.7597,83.2119,83.6642,84.1164,84.5687,85.0209,85.4731,85.9254,86.3776,86.8299,87.2821,87.7343,88.1866,88.6388,89.091,89.5433,89.9955,90.4478,90.9,91.3522,91.8045,92.2567,92.709,93.1612,93.6134,94.0657,94.5179,94.9701,95.4224,95.8746,96.3269,96.7791,97.2313,97.6836,98.1358,98.5881,99.0403,99.4925,99.9448,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100]
					},
					{
						"classifier": "Selective Naive Bayes",
						"values": [0,0.452239,0.904478,1.35672,1.80896,2.26119,2.71343,3.16567,3.61791,4.07015,4.49254,4.64328,4.79403,4.94478,5.09552,5.24627,5.39701,5.54776,5.69851,5.84925,6.01493,6.24104,6.46716,6.69328,6.9194,7.14552,7.37164,7.50771,7.58308,7.65846,7.73383,7.8092,7.88458,7.95995,8.03532,8.1107,8.18607,8.26144,8.33682,8.41219,8.48756,8.56294,8.63831,8.71368,8.78905,8.86443,8.9398,9.13507,9.36119,9.58731,9.81343,10.0396,10.2657,10.5006,10.7719,11.0433,11.3146,11.586,11.8573,12.1287,12.4,12.6713,12.9427,13.214,13.4854,13.7567,14.0281,14.2994,14.5707,14.8421,15.2388,15.691,16.1433,16.5955,17.0478,17.5,17.9522,18.4045,18.8567,19.309,19.7612,20.2134,20.6657,20.8955,20.8955,20.8955,20.9388,21.1649,21.391,21.6172,21.8433,22.0694,22.2955,22.5216,22.7478,22.9739,23.2,23.4261,23.6522,23.8784,23.8806,23.8806,23.8806,24.0366,24.2627,24.4888,24.7149,24.941,25.1672,25.3899,25.5784,25.7668,25.9552,26.1437,26.3321,26.5205,26.709,26.8974,27.0858,27.2743,27.4627,27.6511,27.8396,28.028,28.2164,28.4049,28.5933,28.7817,28.9701,29.1586,29.347,29.5354,29.7239,29.9123,30.1007,30.2892,30.4776,30.666,30.8545,31.0429,31.2313,31.4198,31.6082,31.7966,31.9851,32.1735,32.3619,32.5504,32.7388,32.8358,32.8358,32.8358,32.9194,33.3716,33.8239,34.2761,34.3284,34.3284,34.3284,34.5045,34.806,35.1075,35.409,35.7104,36.0119,36.3134,36.6149,36.9164,37.2179,37.3134,37.3134,37.3134,37.3134,37.3134,37.3134,37.3134,37.3134,37.3134,37.3134,37.6672,38.1194,38.5716,39.0239,39.4761,39.9284,40.2985,40.2985,40.2985,40.2985,40.4479,40.6175,40.7871,40.9567,41.1263,41.2959,41.4655,41.6351,41.8047,41.9743,42.1438,42.3134,42.483,42.6526,42.8222,42.9918,43.1614,43.331,43.5006,43.6701,43.8397,44.0093,44.1789,44.3485,44.5181,44.6877,44.7761,44.7761,44.7761,44.7761,44.7761,44.7761,44.7761,45.1731,45.6254,46.0776,46.2687,46.2687,46.2687,46.394,46.8463,47.2985,47.7507,47.9821,48.2082,48.4343,48.6604,48.8866,49.1127,49.3267,49.5205,49.7143,49.9081,50.1019,50.2957,50.4896,50.6834,50.8772,51.071,51.2648,51.4586,51.6525,51.8463,52.0401,52.2339,52.4277,52.6215,52.8154,53.0092,53.203,53.3968,53.5906,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.7313,53.9896,54.4418,54.894,55.2239,55.2239,55.2239,55.2239,55.4433,55.6694,55.8955,56.1216,56.3478,56.5739,56.8279,57.1294,57.4308,57.7323,58.0338,58.3353,58.6368,58.9383,59.2398,59.5413,59.7015,59.7015,59.7015,59.7015,59.7015,59.7015,59.7015,59.8978,60.1239,60.35,60.5761,60.8022,61.0284,61.2545,61.4806,61.7067,61.9328,62.159,62.3851,62.6112,62.6866,62.6866,62.6866,62.8522,63.3045,63.7567,64.209,64.6612,65.1134,65.5657,65.8448,66.0709,66.297,66.5231,66.7493,66.9754,67.1642,67.1642,67.1642,67.1642,67.1642,67.1642,67.1642,67.1925,67.2428,67.293,67.3433,67.3935,67.4438,67.494,67.5443,67.5945,67.6448,67.695,67.7453,67.7955,67.8458,67.896,67.9463,67.9965,68.0468,68.097,68.1473,68.1975,68.2478,68.298,68.3483,68.3985,68.4488,68.499,68.5493,68.5995,68.6498,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.6567,68.7149,68.941,69.1672,69.3933,69.6194,69.8455,70.0716,70.1493,70.1493,70.1493,70.1493,70.1493,70.1493,70.1493,70.1493,70.1493,70.1493,70.1493,70.1493,70.1493,70.2081,70.3373,70.4665,70.5957,70.7249,70.8542,70.9834,71.1126,71.2418,71.371,71.5002,71.6294,71.7586,71.8878,72.0171,72.1463,72.2755,72.4047,72.5339,72.6631,72.7923,72.9215,73.0507,73.294,73.7463,74.1985,74.6507,75.103,75.5552,76.0075,76.4597,76.9119,77.3642,77.6119,77.6119,77.6119,77.6806,78.1328,78.5851,79.0373,79.1045,79.1045,79.1045,79.1876,79.3383,79.4891,79.6398,79.7905,79.9413,80.092,80.2428,80.3935,80.5443,80.695,80.8458,80.9965,81.1473,81.298,81.4488,81.5995,81.7502,81.901,82.0517,82.2025,82.3532,82.504,82.6547,82.8055,82.9562,83.107,83.2577,83.4085,83.5592,83.7739,84,84.2261,84.4522,84.6784,84.9045,85.0746,85.0746,85.0746,85.0746,85.0746,85.0746,85.0746,85.0746,85.0746,85.0746,85.153,85.3791,85.6052,85.8313,86.0575,86.2836,86.5097,86.5672,86.5672,86.5672,86.6679,86.894,87.1201,87.3463,87.5724,87.7985,88.0246,88.0597,88.0597,88.0597,88.0597,88.0597,88.0597,88.0735,88.13,88.1866,88.2431,88.2996,88.3562,88.4127,88.4692,88.5257,88.5823,88.6388,88.6953,88.7519,88.8084,88.8649,88.9215,88.978,89.0345,89.091,89.1476,89.2041,89.2606,89.3172,89.3737,89.4302,89.4868,89.5433,89.5522,89.5522,89.5522,89.5522,89.5522,89.5522,89.5522,89.5522,89.5522,89.5522,89.5522,89.5522,89.5522,89.5522,89.5522,89.5522,89.5522,89.5522,89.5522,89.5522,89.5522,89.5522,89.5522,89.5894,89.6396,89.6899,89.7401,89.7904,89.8406,89.8909,89.9411,89.9914,90.0416,90.0919,90.1421,90.1924,90.2426,90.2929,90.3431,90.3934,90.4436,90.4939,90.5441,90.5944,90.6446,90.6949,90.7451,90.7954,90.8456,90.8959,90.9461,90.9964,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0448,91.0464,91.0967,91.1469,91.1972,91.2474,91.2977,91.3479,91.3982,91.4484,91.4987,91.5489,91.5992,91.6494,91.6997,91.7499,91.8002,91.8504,91.9007,91.9509,92.0012,92.0514,92.1017,92.1519,92.2022,92.2524,92.3027,92.3529,92.4032,92.4534,92.5036,92.5373,92.5373,92.5373,92.5507,93.003,93.4552,93.9075,94.3597,94.8119,95.2642,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5224,95.5455,95.5998,95.654,95.7083,95.7626,95.8168,95.8711,95.9254,95.9796,96.0339,96.0882,96.1424,96.1967,96.251,96.3053,96.3595,96.4138,96.4681,96.5223,96.5766,96.6309,96.6851,96.7394,96.7937,96.8479,96.9022,96.9565,97.0107,97.065,97.1193,97.1736,97.2278,97.2821,97.3364,97.3906,97.4449,97.4992,97.5534,97.6077,97.662,97.7162,97.7705,97.8248,97.879,97.9333,97.9876,98.0419,98.0961,98.1504,98.2047,98.2589,98.3132,98.3675,98.4217,98.476,98.5303,98.5845,98.6388,98.6931,98.7473,98.8016,98.8559,98.9101,98.9644,99.0187,99.073,99.1272,99.1815,99.2358,99.29,99.3443,99.3986,99.4528,99.5071,99.5614,99.6156,99.6699,99.7242,99.7784,99.8327,99.887,99.9413,99.9955,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100]
					}
				]
			},
			{
				"targetValue": "IE",
				"curves": [
					{
						"classifier": "Optimal",
						"values": [0,0.43913,0.878261,1.31739,1.75652,2.19565,2.63478,3.07391,3.51304,3.95217,4.3913,4.83043,5.26957,5.7087,6.14783,6.58696,7.02609,7.46522,7.90435,8.34348,8.78261,9.22174,9.66087,10.1,10.5391,10.9783,11.4174,11.8565,12.2957,12.7348,13.1739,13.613,14.0522,14.4913,14.9304,15.3696,15.8087,16.2478,16.687,17.1261,17.5652,18.0043,18.4435,18.8826,19.3217,19.7609,20.2,20.6391,21.0783,21.5174,21.9565,22.3957,22.8348,23.2739,23.713,24.1522,24.5913,25.0304,25.4696,25.9087,26.3478,26.787,27.2261,27.6652,28.1043,28.5435,28.9826,29.4217,29.8609,30.3,30.7391,31.1783,31.6174,32.0565,32.4957,32.9348,33.3739,33.813,34.2522,34.6913,35.1304,35.5696,36.0087,36.4478,36.887,37.3261,37.7652,38.2043,38.6435,39.0826,39.5217,39.9609,40.4,40.8391,41.2783,41.7174,42.1565,42.5957,43.0348,43.4739,43.913,44.3522,44.7913,45.2304,45.6696,46.1087,46.5478,46.987,47.4261,47.8652,48.3043,48.7435,49.1826,49.6217,50.0609,50.5,50.9391,51.3783,51.8174,52.2565,52.6957,53.1348,53.5739,54.013,54.4522,54.8913,55.3304,55.7696,56.2087,56.6478,57.087,57.5261,57.9652,58.4043,58.8435,59.2826,59.7217,60.1609,60.6,61.0391,61.4783,61.9174,62.3565,62.7957,63.2348,63.6739,64.113,64.5522,64.9913,65.4304,65.8696,66.3087,66.7478,67.187,67.6261,68.0652,68.5043,68.9435,69.3826,69.8217,70.2609,70.7,71.1391,71.5783,72.0174,72.4565,72.8957,73.3348,73.7739,74.213,74.6522,75.0913,75.5304,75.9696,76.4087,76.8478,77.287,77.7261,78.1652,78.6043,79.0435,79.4826,79.9217,80.3609,80.8,81.2391,81.6783,82.1174,82.5565,82.9957,83.4348,83.8739,84.313,84.7522,85.1913,85.6304,86.0696,86.5087,86.9478,87.387,87.8261,88.2652,88.7043,89.1435,89.5826,90.0217,90.4609,90.9,91.3391,91.7783,92.2174,92.6565,93.0957,93.5348,93.9739,94.413,94.8522,95.2913,95.7304,96.1696,96.6087,97.0478,97.487,97.9261,98.3652,98.8043,99.2435,99.6826,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100]
					},
					{
						"classifier": "Selective Naive Bayes",
						"values": [0,0.351304,0.702609,1.05391,1.40522,1.75652,2.10783,2.45913,2.81043,3.16174,3.51304,3.86435,4.21565,4.56696,4.91826,5.26957,5.62087,5.93716,6.2182,6.49925,6.78029,7.06133,7.34238,7.62342,7.90446,8.18551,8.46655,8.74759,9.02864,9.30968,9.59072,9.87177,10.1528,10.4339,10.7149,10.9959,11.277,11.558,11.8391,12.1201,12.4012,12.6822,12.9632,13.2443,13.5253,13.8064,14.0874,14.3685,14.6495,14.9306,15.2116,15.4926,15.7737,16.0547,16.3358,16.6168,16.8979,17.1789,17.4599,17.741,18.022,18.3031,18.5841,18.8652,19.1462,19.4272,19.7083,19.9893,20.2704,20.5514,20.8325,21.1135,21.3946,21.6756,21.9566,22.2377,22.5187,22.7998,23.0808,23.3619,23.6429,23.9239,24.205,24.486,24.7671,25.0481,25.3292,25.6102,25.8912,26.1723,26.4533,26.7344,27.0154,27.2965,27.5775,27.8586,28.1396,28.4206,28.7017,28.9827,29.2754,29.5681,29.8609,30.1536,30.4464,30.7391,31.0319,31.3246,31.6174,31.9036,32.1232,32.3428,32.5623,32.7819,33.0014,33.221,33.4763,33.7691,34.0618,34.3546,34.6473,34.9401,35.2329,35.5256,35.8184,36.1111,36.4899,36.929,37.3681,37.8072,38.2464,38.6855,39.1246,39.5638,40.0029,40.442,40.8812,41.3203,41.7594,42.1562,42.4855,42.8149,43.1442,43.4736,43.8029,44.1322,44.4616,44.7909,45.1203,45.4496,45.779,46.1083,46.4129,46.6081,46.8032,46.9984,47.1936,47.3887,47.5839,47.7791,47.9742,48.1694,48.3646,48.5597,48.7549,48.9501,49.1452,49.3404,49.5356,49.7308,49.9259,50.1211,50.3163,50.5114,50.7066,50.9018,51.0969,51.2921,51.4873,51.6824,51.8776,52.0728,52.315,52.6077,52.9005,53.1932,53.486,53.7787,54.0715,54.3643,54.657,54.9498,55.2425,55.5353,55.828,56.1208,56.4135,56.7063,56.999,57.2918,57.5845,57.8773,58.17,58.4628,58.7556,59.0483,59.3411,59.6338,59.9266,60.2193,60.5121,60.8048,61.0833,61.3578,61.6322,61.9067,62.1812,62.4556,62.7301,63.0045,63.279,63.5534,63.8279,64.1024,64.3768,64.6513,64.9257,65.2002,65.4746,65.7491,66.0236,66.298,66.5725,66.8469,67.1214,67.3958,67.6703,67.9447,68.2812,68.7203,69.1594,69.5819,69.8014,70.021,70.2406,70.4601,70.6797,70.8993,71.1536,71.4464,71.7391,72.0319,72.3246,72.6174,72.9101,73.2029,73.4957,73.7884,74.1652,74.6043,75.0435,75.4225,75.642,75.8616,76.0812,76.3007,76.5203,76.7399,76.8116,76.8116,76.8116,76.8116,76.8116,76.8116,76.8329,77.1256,77.4184,77.7111,78.0039,78.2966,78.5894,78.8821,79.1749,79.4676,79.7101,79.7101,79.7101,79.7101,79.9652,80.258,80.5507,80.8435,81.1362,81.429,81.7217,82.0145,82.3072,82.6,82.8217,83.0413,83.2609,83.4804,83.7,83.9196,84.058,84.058,84.058,84.058,84.058,84.058,84.058,84.058,84.058,84.058,84.1609,84.3804,84.6,84.8196,85.0391,85.2587,85.4783,85.5072,85.5072,85.5072,85.5072,85.5072,85.5072,85.5333,85.6309,85.7285,85.8261,85.9237,86.0213,86.1188,86.2164,86.314,86.4116,86.5092,86.6068,86.7043,86.8019,86.8995,86.9971,87.0947,87.1923,87.2899,87.3874,87.485,87.5826,87.6802,87.7778,87.8754,87.9729,88.0705,88.1681,88.2657,88.3633,88.4058,88.4058,88.4058,88.4058,88.4058,88.4058,88.4058,88.4058,88.4058,88.4058,88.4058,88.4058,88.4058,88.4058,88.4058,88.4058,88.4058,88.4058,88.4058,88.4058,88.4058,88.4058,88.4058,88.5072,88.7268,88.9464,89.1659,89.3855,89.6051,89.8246,90.0442,90.2638,90.4833,90.7029,90.9225,91.142,91.3043,91.3043,91.3043,91.3043,91.3043,91.3043,91.3043,91.3043,91.3043,91.3043,91.3043,91.3043,91.3043,91.3043,91.3043,91.3043,91.3043,91.6377,92.0768,92.5159,92.7536,92.7536,92.7536,92.7614,92.8101,92.8589,92.9077,92.9565,93.0053,93.0541,93.1029,93.1517,93.2005,93.2493,93.2981,93.3469,93.3957,93.4444,93.4932,93.542,93.5908,93.6396,93.6884,93.7372,93.786,93.8348,93.8836,93.9324,93.9812,94.03,94.0787,94.1275,94.1763,94.2029,94.2029,94.2029,94.2029,94.2029,94.2029,94.2029,94.3906,94.6101,94.8297,95.0493,95.2688,95.4884,95.708,95.9275,96.1471,96.3667,96.5862,96.8058,97.0254,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.1014,97.2256,97.372,97.5184,97.6647,97.8111,97.9575,98.1039,98.2502,98.3966,98.543,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5507,98.5884,98.6982,98.808,98.9178,99.0275,99.1373,99.2471,99.3569,99.4667,99.5764,99.6862,99.796,99.9058,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100]
					}
				]
			},
			{
				"targetValue": "N",
				"curves": [
					{
						"classifier": "Optimal",
						"values": [0,0.181437,0.362874,0.544311,0.725749,0.907186,1.08862,1.27006,1.4515,1.63293,1.81437,1.99581,2.17725,2.35868,2.54012,2.72156,2.90299,3.08443,3.26587,3.44731,3.62874,3.81018,3.99162,4.17305,4.35449,4.53593,4.71737,4.8988,5.08024,5.26168,5.44311,5.62455,5.80599,5.98743,6.16886,6.3503,6.53174,6.71317,6.89461,7.07605,7.25749,7.43892,7.62036,7.8018,7.98323,8.16467,8.34611,8.52754,8.70898,8.89042,9.07186,9.25329,9.43473,9.61617,9.7976,9.97904,10.1605,10.3419,10.5234,10.7048,10.8862,11.0677,11.2491,11.4305,11.612,11.7934,11.9749,12.1563,12.3377,12.5192,12.7006,12.882,13.0635,13.2449,13.4263,13.6078,13.7892,13.9707,14.1521,14.3335,14.515,14.6964,14.8778,15.0593,15.2407,15.4222,15.6036,15.785,15.9665,16.1479,16.3293,16.5108,16.6922,16.8737,17.0551,17.2365,17.418,17.5994,17.7808,17.9623,18.1437,18.3251,18.5066,18.688,18.8695,19.0509,19.2323,19.4138,19.5952,19.7766,19.9581,20.1395,20.321,20.5024,20.6838,20.8653,21.0467,21.2281,21.4096,21.591,21.7725,21.9539,22.1353,22.3168,22.4982,22.6796,22.8611,23.0425,23.224,23.4054,23.5868,23.7683,23.9497,24.1311,24.3126,24.494,24.6754,24.8569,25.0383,25.2198,25.4012,25.5826,25.7641,25.9455,26.1269,26.3084,26.4898,26.6713,26.8527,27.0341,27.2156,27.397,27.5784,27.7599,27.9413,28.1228,28.3042,28.4856,28.6671,28.8485,29.0299,29.2114,29.3928,29.5743,29.7557,29.9371,30.1186,30.3,30.4814,30.6629,30.8443,31.0257,31.2072,31.3886,31.5701,31.7515,31.9329,32.1144,32.2958,32.4772,32.6587,32.8401,33.0216,33.203,33.3844,33.5659,33.7473,33.9287,34.1102,34.2916,34.4731,34.6545,34.8359,35.0174,35.1988,35.3802,35.5617,35.7431,35.9246,36.106,36.2874,36.4689,36.6503,36.8317,37.0132,37.1946,37.376,37.5575,37.7389,37.9204,38.1018,38.2832,38.4647,38.6461,38.8275,39.009,39.1904,39.3719,39.5533,39.7347,39.9162,40.0976,40.279,40.4605,40.6419,40.8234,41.0048,41.1862,41.3677,41.5491,41.7305,41.912,42.0934,42.2749,42.4563,42.6377,42.8192,43.0006,43.182,43.3635,43.5449,43.7263,43.9078,44.0892,44.2707,44.4521,44.6335,44.815,44.9964,45.1778,45.3593,45.5407,45.7222,45.9036,46.085,46.2665,46.4479,46.6293,46.8108,46.9922,47.1737,47.3551,47.5365,47.718,47.8994,48.0808,48.2623,48.4437,48.6251,48.8066,48.988,49.1695,49.3509,49.5323,49.7138,49.8952,50.0766,50.2581,50.4395,50.621,50.8024,50.9838,51.1653,51.3467,51.5281,51.7096,51.891,52.0725,52.2539,52.4353,52.6168,52.7982,52.9796,53.1611,53.3425,53.524,53.7054,53.8868,54.0683,54.2497,54.4311,54.6126,54.794,54.9754,55.1569,55.3383,55.5198,55.7012,55.8826,56.0641,56.2455,56.4269,56.6084,56.7898,56.9713,57.1527,57.3341,57.5156,57.697,57.8784,58.0599,58.2413,58.4228,58.6042,58.7856,58.9671,59.1485,59.3299,59.5114,59.6928,59.8743,60.0557,60.2371,60.4186,60.6,60.7814,60.9629,61.1443,61.3257,61.5072,61.6886,61.8701,62.0515,62.2329,62.4144,62.5958,62.7772,62.9587,63.1401,63.3216,63.503,63.6844,63.8659,64.0473,64.2287,64.4102,64.5916,64.7731,64.9545,65.1359,65.3174,65.4988,65.6802,65.8617,66.0431,66.2246,66.406,66.5874,66.7689,66.9503,67.1317,67.3132,67.4946,67.676,67.8575,68.0389,68.2204,68.4018,68.5832,68.7647,68.9461,69.1275,69.309,69.4904,69.6719,69.8533,70.0347,70.2162,70.3976,70.579,70.7605,70.9419,71.1234,71.3048,71.4862,71.6677,71.8491,72.0305,72.212,72.3934,72.5749,72.7563,72.9377,73.1192,73.3006,73.482,73.6635,73.8449,74.0263,74.2078,74.3892,74.5707,74.7521,74.9335,75.115,75.2964,75.4778,75.6593,75.8407,76.0222,76.2036,76.385,76.5665,76.7479,76.9293,77.1108,77.2922,77.4737,77.6551,77.8365,78.018,78.1994,78.3808,78.5623,78.7437,78.9251,79.1066,79.288,79.4695,79.6509,79.8323,80.0138,80.1952,80.3766,80.5581,80.7395,80.921,81.1024,81.2838,81.4653,81.6467,81.8281,82.0096,82.191,82.3725,82.5539,82.7353,82.9168,83.0982,83.2796,83.4611,83.6425,83.824,84.0054,84.1868,84.3683,84.5497,84.7311,84.9126,85.094,85.2754,85.4569,85.6383,85.8198,86.0012,86.1826,86.3641,86.5455,86.7269,86.9084,87.0898,87.2713,87.4527,87.6341,87.8156,87.997,88.1784,88.3599,88.5413,88.7228,88.9042,89.0856,89.2671,89.4485,89.6299,89.8114,89.9928,90.1743,90.3557,90.5371,90.7186,90.9,91.0814,91.2629,91.4443,91.6257,91.8072,91.9886,92.1701,92.3515,92.5329,92.7144,92.8958,93.0772,93.2587,93.4401,93.6216,93.803,93.9844,94.1659,94.3473,94.5287,94.7102,94.8916,95.0731,95.2545,95.4359,95.6174,95.7988,95.9802,96.1617,96.3431,96.5246,96.706,96.8874,97.0689,97.2503,97.4317,97.6132,97.7946,97.976,98.1575,98.3389,98.5204,98.7018,98.8832,99.0647,99.2461,99.4275,99.609,99.7904,99.9719,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100]
					},
					{
						"classifier": "Selective Naive Bayes",
						"values": [0,0.181437,0.362874,0.544311,0.725749,0.907186,1.08862,1.27006,1.4515,1.63293,1.81437,1.99581,2.17725,2.35868,2.54012,2.72156,2.90299,3.07313,3.23189,3.39064,3.5494,3.70816,3.86692,4.02567,4.18443,4.34319,4.50195,4.6607,4.81946,4.97822,5.13698,5.29573,5.45449,5.61325,5.77201,5.93076,6.08952,6.24828,6.40704,6.56579,6.72455,6.88331,7.04207,7.18563,7.18563,7.18563,7.18563,7.18563,7.18563,7.18563,7.27545,7.45689,7.63832,7.81976,8.0012,8.18263,8.36407,8.54551,8.72695,8.90838,9.08982,9.27126,9.45269,9.63413,9.81557,9.99701,10.1784,10.3599,10.5413,10.7228,10.8683,10.9979,11.1275,11.2571,11.3867,11.5163,11.6459,11.7754,11.905,12.0346,12.1642,12.2938,12.4234,12.553,12.6826,12.8122,12.9418,13.0714,13.201,13.3306,13.4602,13.5898,13.7194,13.8796,14.0611,14.2425,14.424,14.6054,14.7868,14.9683,15.1497,15.3311,15.5126,15.6627,15.7988,15.9349,16.071,16.207,16.3431,16.4792,16.6153,16.7513,16.8874,17.0235,17.1596,17.2957,17.4096,17.5003,17.591,17.6817,17.7725,17.8632,17.9539,18.1251,18.3066,18.488,18.6695,18.8509,19.0323,19.208,19.3693,19.5305,19.6918,19.8531,20.0144,20.1756,20.3369,20.4982,20.6595,20.8208,20.982,21.1433,21.3046,21.4659,21.6271,21.7884,21.9497,22.111,22.2723,22.4335,22.5948,22.7561,22.9174,23.0786,23.2399,23.4012,23.5625,23.7238,23.885,24.0581,24.2395,24.421,24.6024,24.7838,24.9653,25.1467,25.3281,25.5096,25.691,25.8725,26.0539,26.2353,26.4168,26.5982,26.7796,26.9611,27.1425,27.324,27.5054,27.6868,27.8683,28.0497,28.2311,28.4126,28.594,28.7754,28.9569,29.1383,29.3198,29.3413,29.3413,29.3413,29.4467,29.6281,29.8096,29.9656,30.0563,30.147,30.2377,30.3284,30.4192,30.5099,30.6006,30.6913,30.782,30.8728,30.9635,31.0542,31.1521,31.3335,31.515,31.6964,31.7836,31.8441,31.9046,31.9651,32.0255,32.086,32.1465,32.207,32.2675,32.3279,32.415,32.5057,32.5964,32.6871,32.7778,32.8686,32.9844,33.1659,33.3473,33.5287,33.7102,33.8916,34.0731,34.2545,34.4359,34.6174,34.7988,34.9802,35.1617,35.3431,35.5246,35.706,35.8874,36.0689,36.2503,36.4317,36.6132,36.7946,36.976,37.1575,37.3389,37.5204,37.7018,37.8832,38.0647,38.2461,38.4275,38.609,38.7904,38.9719,39.1533,39.3347,39.5162,39.6976,39.879,40.0605,40.2419,40.4234,40.6048,40.7572,40.8609,40.9646,41.0683,41.1719,41.2756,41.3793,41.483,41.5867,41.6903,41.794,41.8977,42.0014,42.105,42.2087,42.3124,42.4161,42.5198,42.6234,42.7271,42.8308,42.9345,43.0382,43.1629,43.3443,43.5257,43.7072,43.8886,44.0701,44.2515,44.3722,44.4629,44.5536,44.6443,44.735,44.8257,44.9228,45.1042,45.2856,45.4671,45.6485,45.8299,46.0114,46.1645,46.2854,46.4064,46.5273,46.6483,46.7693,46.8902,47.0112,47.1321,47.2531,47.4084,47.5898,47.7713,47.9419,48.083,48.2242,48.3653,48.5064,48.6475,48.7886,48.9297,49.0709,49.212,49.3531,49.4942,49.6353,49.7764,49.9176,50.0587,50.1998,50.3409,50.482,50.6232,50.7643,50.9054,51.0465,51.1876,51.3287,51.4699,51.611,51.7521,51.8932,52.0343,52.1982,52.3796,52.5611,52.7246,52.8379,52.9513,53.0647,53.1781,53.2915,53.4049,53.5183,53.6317,53.7451,53.8585,53.9719,54.0853,54.1987,54.3121,54.4255,54.5389,54.6523,54.7657,54.8791,54.9925,55.1059,55.2193,55.3327,55.4461,55.5595,55.6729,55.6886,55.6886,55.6886,55.7904,55.9719,56.1533,56.3347,56.5162,56.6976,56.879,56.8862,56.8862,56.8862,57.006,57.1874,57.3689,57.5503,57.7317,57.9132,58.0838,58.0838,58.0838,58.0838,58.2216,58.403,58.5844,58.7659,58.9473,59.1287,59.3102,59.4916,59.6731,59.8545,60.0359,60.2174,60.3988,60.5128,60.5733,60.6337,60.6942,60.7547,60.8152,60.8756,60.9361,60.9966,61.0571,61.197,61.3784,61.5599,61.7413,61.9228,62.1042,62.2856,62.4671,62.6485,62.8299,62.8743,62.8743,62.8743,62.9569,63.1383,63.3198,63.4871,63.5778,63.6686,63.7593,63.85,63.9407,64.0314,64.1222,64.2129,64.3036,64.3943,64.485,64.5757,64.6665,64.7716,64.8774,64.9833,65.0891,65.195,65.3008,65.4066,65.5125,65.6183,65.7242,65.83,65.9358,66.0417,66.1475,66.2533,66.3592,66.465,66.5709,66.6767,66.7825,66.8884,66.9942,67.1,67.2059,67.3117,67.4176,67.5234,67.6292,67.7351,67.8409,67.9468,68.0526,68.1584,68.2643,68.3701,68.4759,68.5818,68.6876,68.7935,68.9257,69.1072,69.2886,69.4611,69.4611,69.4611,69.4611,69.4611,69.4611,69.4611,69.5425,69.724,69.9054,70.0599,70.0599,70.0599,70.0599,70.0599,70.0599,70.0599,70.0599,70.0599,70.0599,70.0823,70.1731,70.2638,70.3545,70.4452,70.5359,70.6266,70.7174,70.8081,70.8988,70.9895,71.0802,71.171,71.2659,71.4473,71.6287,71.8102,71.8563,71.8563,71.8563,71.8563,71.8563,71.8563,71.8563,71.8563,71.8563,71.8563,71.9176,71.9902,72.0628,72.1353,72.2079,72.2805,72.3531,72.4256,72.4982,72.5708,72.6434,72.7159,72.7885,72.8611,72.9337,73.0062,73.0816,73.1622,73.2428,73.3235,73.4041,73.4848,73.5654,73.646,73.7267,73.8073,73.888,73.9686,74.0492,74.1299,74.2105,74.2912,74.3718,74.4524,74.5331,74.6137,74.6943,74.775,74.8556,74.9363,75.0169,75.0975,75.1782,75.2588,75.3395,75.4201,75.5072,75.5979,75.6886,75.7793,75.8701,75.9608,76.0539,76.2051,76.3563,76.5075,76.6587,76.8099,76.9611,77.1123,77.2635,77.4147,77.5659,77.7171,77.8683,78.0195,78.1707,78.3219,78.4731,78.6243,78.7754,78.9266,79.0635,79.1542,79.2449,79.3356,79.4263,79.5171,79.6078,79.6792,79.7397,79.8002,79.8607,79.9212,79.9816,80.0421,80.1026,80.1631,80.2236,80.3731,80.5545,80.7359,80.8778,80.9686,81.0593,81.15,81.2407,81.3314,81.4222,81.4371,81.4371,81.4371,81.4371,81.4371,81.4371,81.4513,81.5118,81.5723,81.6327,81.6932,81.7537,81.8142,81.8747,81.9351,81.9956,82.0662,82.1569,82.2476,82.3383,82.429,82.5198,82.6105,82.7234,82.8443,82.9653,83.0862,83.2072,83.3281,83.4491,83.5701,83.691,83.812,83.8323,83.8323,83.8323,83.9287,84.1102,84.2916,84.4469,84.5149,84.5829,84.651,84.719,84.7871,84.8551,84.9231,84.9912,85.0592,85.1272,85.1953,85.2633,85.3314,85.3994,85.4674,85.5355,85.6035,85.6716,85.7396,85.8076,85.8757,85.9437,86.0118,86.0798,86.1478,86.2159,86.2275,86.2275,86.2275,86.3234,86.5048,86.6862,86.8263,86.8263,86.8263,86.8263,86.8263,86.8263,86.8263,86.8263,86.8263,86.8263,86.8263,86.8263,86.8263,86.8287,86.9195,87.0102,87.1009,87.1916,87.2823,87.3731,87.4251,87.4251,87.4251,87.4251,87.4251,87.4251,87.4251,87.4251,87.4251,87.4251,87.4251,87.4251,87.4251,87.4387,87.4992,87.5597,87.6202,87.6806,87.7411,87.8016,87.8621,87.9226,87.983,88.0826,88.2641,88.4455,88.6269,88.8084,88.9898,89.1713,89.2216,89.2216,89.2216,89.2216,89.2216,89.2216,89.2216,89.2216,89.2216,89.2216,89.2216,89.2216,89.2216,89.2531,89.3136,89.3741,89.4345,89.495,89.5555,89.616,89.6764,89.7369,89.7974,89.8204,89.8204,89.8204,89.8204,89.8204,89.8204,89.8204,89.8204,89.8204,89.8204,89.8204,89.8204,89.8204,89.8204,89.8204,89.8204,89.8275,89.888,89.9485,90.009,90.0695,90.1299,90.1904,90.2509,90.3114,90.3719,90.4323,90.4928,90.5533,90.6138,90.6743,90.7347,90.7952,90.8557,90.9162,90.9766,91.0371,91.0976,91.1581,91.2186,91.279,91.3395,91.4,91.4605,91.521,91.5814,91.6419,91.7024,91.7629,91.8234,91.8838,91.9443,92.0048,92.0653,92.1257,92.1862,92.2389,92.2843,92.3296,92.375,92.4204,92.4657,92.5111,92.5564,92.6018,92.6472,92.6925,92.7379,92.7832,92.8397,92.9203,93.0009,93.0816,93.1622,93.2428,93.3235,93.4041,93.4848,93.5654,93.646,93.7267,93.8073,93.888,93.9686,94.0492,94.1299,94.2105,94.2912,94.3718,94.4524,94.5331,94.6137,94.6943,94.775,94.8556,94.9363,95.0169,95.0975,95.1782,95.265,95.3557,95.4464,95.5371,95.6278,95.7186,95.8087,95.845,95.8813,95.9176,95.9539,95.9902,96.0265,96.0628,96.099,96.1353,96.1716,96.2079,96.2442,96.2805,96.3168,96.3531,96.3893,96.4293,96.4729,96.5164,96.56,96.6035,96.647,96.6906,96.7341,96.7777,96.8212,96.8648,96.9083,96.9519,96.9954,97.0389,97.0825,97.126,97.1696,97.2131,97.2567,97.3002,97.3438,97.3873,97.4309,97.4744,97.5179,97.5615,97.605,97.6486,97.6921,97.7357,97.7792,97.8228,97.8663,97.9098,97.9534,97.9969,98.0405,98.084,98.1276,98.1711,98.2147,98.2582,98.3017,98.3453,98.3888,98.4324,98.4759,98.5195,98.563,98.6066,98.6501,98.6937,98.7372,98.7807,98.8243,98.8678,98.9114,98.9549,98.9985,99.042,99.0856,99.1291,99.1726,99.2162,99.2597,99.3033,99.3468,99.3904,99.4339,99.4775,99.521,99.5646,99.6081,99.6516,99.6952,99.7387,99.7823,99.8258,99.8694,99.9129,99.9565,100]
					}
				]
			}
		]
	},
	"preparationReport": {
		"reportType": "Preparation",
		"summary": {
			"dictionary": "SpliceJunction",
			"variables": {
				"types": [
					"Categorical",
					"Numerical",
					"Table"
				],
				"numbers": [
					12,
					90,
					1
				]
			},
			"database": "..\/..\/..\/MTdatasets\/SpliceJunction\/SpliceJunction.txt",
			"samplePercentage": 10,
			"samplingMode": "Include sample",
			"selectionVariable": "",
			"selectionValue": "",
			"instances": 303,
			"learningTask": "Classification analysis",
			"targetVariable": "Class",
			"targetDescriptiveStats": {
				"values": 3,
				"mode": "N",
				"modeFrequency": 167,
				"missingNumber": 0,
				"sparseMissingNumber": 0
			},
			"targetValues": {
				"values": ["EI","IE","N"],
				"frequencies": [67,69,167]
			},
			"evaluatedVariables": 101,
			"nativeVariables": 1,
			"constructedVariables": 100,
			"informativeVariables": 7,
			"selectedVariables": 7,
			"featureEngineering": {
				"maxNumberOfConstructedVariables": 100,
				"maxNumberOfTextFeatures": 0,
				"maxNumberOfTrees": 5,
				"maxNumberOfVariablePairs": 0
			},
			"discretization": "MODL",
			"valueGrouping": "MODL",
			"nullModel": {
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926
			}
		},
		"variablesStatistics": [
			{
				"rank": "R001",
				"name": "Mode(DNA.Char) where Pos <= 30.5",
				"type": "Categorical",
				"level": 0.0731216,
				"parts": 2,
				"values": 4,
				"mode": "C",
				"modeFrequency": 122,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 8.17364,
				"preparationCost": 23.5167,
				"dataCost": 254.125,
				"derivationRule": "TableMode(`DNA where Pos <= 30.5`, Char)"
			},
			{
				"rank": "R002",
				"name": "Mode(DNA.Char) where Pos in ]15.5, 30.5]",
				"type": "Categorical",
				"level": 0.0495677,
				"parts": 3,
				"values": 4,
				"mode": "C",
				"modeFrequency": 114,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 9.55993,
				"preparationCost": 31.5551,
				"dataCost": 251.964,
				"derivationRule": "TablePartitionMode(`TablePartition(DNA) per Pos(4)`, Char)"
			},
			{
				"rank": "R003",
				"name": "Mode(DNA.Char)",
				"type": "Categorical",
				"level": 0.0447911,
				"parts": 3,
				"values": 4,
				"mode": "C",
				"modeFrequency": 119,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 4.68213,
				"preparationCost": 30.8759,
				"dataCost": 258.994,
				"derivationRule": "TableMode(DNA, Char)"
			},
			{
				"rank": "R004",
				"name": "Mean(DNA.Pos) where Char = G",
				"type": "Numerical",
				"level": 0.0261259,
				"parts": 2,
				"values": 281,
				"min": 16,
				"max": 46.55555556,
				"mean": 31.84768883,
				"stdDev": 4.848828493,
				"missingNumber": 1,
				"sparseMissingNumber": 0,
				"constructionCost": 9.55993,
				"preparationCost": 19.4458,
				"dataCost": 271.302,
				"derivationRule": "TableMean(`DNA where Char = G`, Pos)"
			},
			{
				"rank": "R005",
				"name": "Median(DNA.Pos) where Char = G",
				"type": "Numerical",
				"level": 0.0212659,
				"parts": 3,
				"values": 59,
				"min": 8,
				"max": 48,
				"mean": 32.44701987,
				"stdDev": 6.725618787,
				"missingNumber": 1,
				"sparseMissingNumber": 0,
				"constructionCost": 9.55993,
				"preparationCost": 29.3732,
				"dataCost": 262.873,
				"derivationRule": "TableMedian(`DNA where Char = G`, Pos)"
			},
			{
				"rank": "R006",
				"name": "Count(DNA) where Char = G",
				"type": "Numerical",
				"level": 0.0147548,
				"parts": 2,
				"values": 26,
				"min": 0,
				"max": 32,
				"mean": 15.81188119,
				"stdDev": 5.174919597,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 9.55993,
				"preparationCost": 21.0465,
				"dataCost": 273.207,
				"derivationRule": "TableCount(`DNA where Char = G`)"
			},
			{
				"rank": "R007",
				"name": "Median(DNA.Pos) where Char = C",
				"type": "Numerical",
				"level": 0.00882745,
				"parts": 2,
				"values": 63,
				"min": 9,
				"max": 56.5,
				"mean": 29.24587459,
				"stdDev": 7.66919868,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 9.55993,
				"preparationCost": 19.4456,
				"dataCost": 276.636,
				"derivationRule": "TableMedian(`DNA where Char = C`, Pos)"
			},
			{
				"rank": "R008",
				"name": "Count(DNA)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 60,
				"max": 60,
				"mean": 60,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableCount(DNA)"
			},
			{
				"rank": "R009",
				"name": "Count(DNA) where Char = A",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 25,
				"min": 0,
				"max": 27,
				"mean": 13.53135314,
				"stdDev": 4.652779483,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableCount(`DNA where Char = A`)"
			},
			{
				"rank": "R010",
				"name": "Count(DNA) where Char = C",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 29,
				"min": 2,
				"max": 34,
				"mean": 16.48844884,
				"stdDev": 5.649179844,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableCount(`DNA where Char = C`)"
			},
			{
				"rank": "R011",
				"name": "Count(DNA) where Char = T",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 29,
				"min": 2,
				"max": 34,
				"mean": 14.16171617,
				"stdDev": 5.235407476,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableCount(`DNA where Char = T`)"
			},
			{
				"rank": "R012",
				"name": "Count(DNA) where Char not in {C, G, T, A}",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 2,
				"min": 0,
				"max": 1,
				"mean": 0.006600660066,
				"stdDev": 0.08097586895,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableCount(`DNA where Char not in {C, G, T, A}`)"
			},
			{
				"rank": "R013",
				"name": "Count(DNA) where Char not in {C, G}",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 33,
				"min": 10,
				"max": 47,
				"mean": 27.69966997,
				"stdDev": 6.838946411,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableCount(`DNA where Char not in {C, G}`)"
			},
			{
				"rank": "R014",
				"name": "Count(DNA) where Pos <= 15.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 15,
				"max": 15,
				"mean": 15,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionCount(`TablePartition(DNA) per Pos(4)`)"
			},
			{
				"rank": "R015",
				"name": "Count(DNA) where Pos <= 30.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 30,
				"max": 30,
				"mean": 30,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableCount(`DNA where Pos <= 30.5`)"
			},
			{
				"rank": "R016",
				"name": "Count(DNA) where Pos <= 7.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 7,
				"max": 7,
				"mean": 7,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionCount(`TablePartition(DNA) per Pos(8)`)"
			},
			{
				"rank": "R017",
				"name": "Count(DNA) where Pos > 30.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 30,
				"max": 30,
				"mean": 30,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableCount(`DNA where Pos > 30.5`)"
			},
			{
				"rank": "R018",
				"name": "Count(DNA) where Pos > 45.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 15,
				"max": 15,
				"mean": 15,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionCount(`TablePartition(DNA) per Pos(4)`)"
			},
			{
				"rank": "R019",
				"name": "Count(DNA) where Pos > 53.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 7,
				"max": 7,
				"mean": 7,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionCount(`TablePartition(DNA) per Pos(8)`)"
			},
			{
				"rank": "R020",
				"name": "Count(DNA) where Pos in ]15.5, 22.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 7,
				"max": 7,
				"mean": 7,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionCount(`TablePartition(DNA) per Pos(8)`)"
			},
			{
				"rank": "R021",
				"name": "Count(DNA) where Pos in ]15.5, 30.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 15,
				"max": 15,
				"mean": 15,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionCount(`TablePartition(DNA) per Pos(4)`)"
			},
			{
				"rank": "R022",
				"name": "Count(DNA) where Pos in ]22.5, 30.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 8,
				"max": 8,
				"mean": 8,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionCount(`TablePartition(DNA) per Pos(8)`)"
			},
			{
				"rank": "R023",
				"name": "Count(DNA) where Pos in ]30.5, 38.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 8,
				"max": 8,
				"mean": 8,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionCount(`TablePartition(DNA) per Pos(8)`)"
			},
			{
				"rank": "R024",
				"name": "Count(DNA) where Pos in ]30.5, 45.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 15,
				"max": 15,
				"mean": 15,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionCount(`TablePartition(DNA) per Pos(4)`)"
			},
			{
				"rank": "R025",
				"name": "Count(DNA) where Pos in ]45.5, 53.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 8,
				"max": 8,
				"mean": 8,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionCount(`TablePartition(DNA) per Pos(8)`)"
			},
			{
				"rank": "R026",
				"name": "Count(DNA) where Pos in ]7.5, 15.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 8,
				"max": 8,
				"mean": 8,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionCount(`TablePartition(DNA) per Pos(8)`)"
			},
			{
				"rank": "R027",
				"name": "CountDistinct(DNA.Char)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 4,
				"min": 2,
				"max": 5,
				"mean": 3.99669967,
				"stdDev": 0.1519586064,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableCountDistinct(DNA, Char)"
			},
			{
				"rank": "R028",
				"name": "CountDistinct(DNA.Char) where Char = C",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 1,
				"max": 1,
				"mean": 1,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableCountDistinct(`DNA where Char = C`, Char)"
			},
			{
				"rank": "R029",
				"name": "CountDistinct(DNA.Char) where Char = G",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 2,
				"min": 0,
				"max": 1,
				"mean": 0.99669967,
				"stdDev": 0.05735362111,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableCountDistinct(`DNA where Char = G`, Char)"
			},
			{
				"rank": "R030",
				"name": "CountDistinct(DNA.Char) where Char not in {C, G}",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 3,
				"min": 1,
				"max": 3,
				"mean": 2,
				"stdDev": 0.1148969979,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableCountDistinct(`DNA where Char not in {C, G}`, Char)"
			},
			{
				"rank": "R031",
				"name": "CountDistinct(DNA.Char) where Pos <= 15.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 4,
				"min": 2,
				"max": 5,
				"mean": 3.848184818,
				"stdDev": 0.3854468996,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionCountDistinct(`TablePartition(DNA) per Pos(4)`, Char)"
			},
			{
				"rank": "R032",
				"name": "CountDistinct(DNA.Char) where Pos <= 30.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 4,
				"min": 2,
				"max": 5,
				"mean": 3.97029703,
				"stdDev": 0.2049927413,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableCountDistinct(`DNA where Pos <= 30.5`, Char)"
			},
			{
				"rank": "R033",
				"name": "CountDistinct(DNA.Char) where Pos > 30.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 4,
				"min": 2,
				"max": 5,
				"mean": 3.98019802,
				"stdDev": 0.1805856636,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableCountDistinct(`DNA where Pos > 30.5`, Char)"
			},
			{
				"rank": "R034",
				"name": "CountDistinct(DNA.Char) where Pos > 45.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 3,
				"min": 2,
				"max": 4,
				"mean": 3.821782178,
				"stdDev": 0.42362664,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionCountDistinct(`TablePartition(DNA) per Pos(4)`, Char)"
			},
			{
				"rank": "R035",
				"name": "CountDistinct(DNA.Char) where Pos in ]15.5, 30.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 3,
				"min": 2,
				"max": 4,
				"mean": 3.884488449,
				"stdDev": 0.3492429139,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionCountDistinct(`TablePartition(DNA) per Pos(4)`, Char)"
			},
			{
				"rank": "R036",
				"name": "CountDistinct(DNA.Char) where Pos in ]30.5, 45.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 4,
				"min": 2,
				"max": 5,
				"mean": 3.914191419,
				"stdDev": 0.3027322058,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionCountDistinct(`TablePartition(DNA) per Pos(4)`, Char)"
			},
			{
				"rank": "R037",
				"name": "Max(DNA.Pos)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 60,
				"max": 60,
				"mean": 60,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMax(DNA, Pos)"
			},
			{
				"rank": "R038",
				"name": "Max(DNA.Pos) where Char = C",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 24,
				"min": 27,
				"max": 60,
				"mean": 56.38283828,
				"stdDev": 4.743448064,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMax(`DNA where Char = C`, Pos)"
			},
			{
				"rank": "R039",
				"name": "Max(DNA.Pos) where Char = G",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 22,
				"min": 35,
				"max": 60,
				"mean": 56.96357616,
				"stdDev": 4.098376087,
				"missingNumber": 1,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMax(`DNA where Char = G`, Pos)"
			},
			{
				"rank": "R040",
				"name": "Max(DNA.Pos) where Char not in {C, G}",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 11,
				"min": 43,
				"max": 60,
				"mean": 58.88118812,
				"stdDev": 1.816429214,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMax(`DNA where Char not in {C, G}`, Pos)"
			},
			{
				"rank": "R041",
				"name": "Max(DNA.Pos) where Pos <= 15.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 15,
				"max": 15,
				"mean": 15,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionMax(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R042",
				"name": "Max(DNA.Pos) where Pos <= 30.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 30,
				"max": 30,
				"mean": 30,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMax(`DNA where Pos <= 30.5`, Pos)"
			},
			{
				"rank": "R043",
				"name": "Max(DNA.Pos) where Pos > 30.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 60,
				"max": 60,
				"mean": 60,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMax(`DNA where Pos > 30.5`, Pos)"
			},
			{
				"rank": "R044",
				"name": "Max(DNA.Pos) where Pos > 45.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 60,
				"max": 60,
				"mean": 60,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionMax(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R045",
				"name": "Max(DNA.Pos) where Pos in ]15.5, 30.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 30,
				"max": 30,
				"mean": 30,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionMax(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R046",
				"name": "Max(DNA.Pos) where Pos in ]30.5, 45.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 45,
				"max": 45,
				"mean": 45,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionMax(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R047",
				"name": "Mean(DNA.Pos)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 30.5,
				"max": 30.5,
				"mean": 30.5,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMean(DNA, Pos)"
			},
			{
				"rank": "R048",
				"name": "Mean(DNA.Pos) where Char = C",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 274,
				"min": 14.25,
				"max": 46.33333333,
				"mean": 29.71814213,
				"stdDev": 5.029068147,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMean(`DNA where Char = C`, Pos)"
			},
			{
				"rank": "R049",
				"name": "Mean(DNA.Pos) where Char not in {C, G}",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 283,
				"min": 20.6,
				"max": 39.91304348,
				"mean": 30.33646503,
				"stdDev": 2.577046027,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMean(`DNA where Char not in {C, G}`, Pos)"
			},
			{
				"rank": "R050",
				"name": "Mean(DNA.Pos) where Pos <= 15.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 8,
				"max": 8,
				"mean": 8,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionMean(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R051",
				"name": "Mean(DNA.Pos) where Pos <= 30.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 15.5,
				"max": 15.5,
				"mean": 15.5,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMean(`DNA where Pos <= 30.5`, Pos)"
			},
			{
				"rank": "R052",
				"name": "Mean(DNA.Pos) where Pos > 30.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 45.5,
				"max": 45.5,
				"mean": 45.5,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMean(`DNA where Pos > 30.5`, Pos)"
			},
			{
				"rank": "R053",
				"name": "Mean(DNA.Pos) where Pos > 45.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 53,
				"max": 53,
				"mean": 53,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionMean(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R054",
				"name": "Mean(DNA.Pos) where Pos in ]15.5, 30.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 23,
				"max": 23,
				"mean": 23,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionMean(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R055",
				"name": "Mean(DNA.Pos) where Pos in ]30.5, 45.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 38,
				"max": 38,
				"mean": 38,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionMean(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R056",
				"name": "Median(DNA.Pos)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 30.5,
				"max": 30.5,
				"mean": 30.5,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMedian(DNA, Pos)"
			},
			{
				"rank": "R057",
				"name": "Median(DNA.Pos) where Char not in {C, G}",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 42,
				"min": 17,
				"max": 45,
				"mean": 30.31023102,
				"stdDev": 4.073920227,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMedian(`DNA where Char not in {C, G}`, Pos)"
			},
			{
				"rank": "R058",
				"name": "Median(DNA.Pos) where Pos <= 15.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 8,
				"max": 8,
				"mean": 8,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionMedian(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R059",
				"name": "Median(DNA.Pos) where Pos <= 30.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 15.5,
				"max": 15.5,
				"mean": 15.5,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMedian(`DNA where Pos <= 30.5`, Pos)"
			},
			{
				"rank": "R060",
				"name": "Median(DNA.Pos) where Pos > 30.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 45.5,
				"max": 45.5,
				"mean": 45.5,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMedian(`DNA where Pos > 30.5`, Pos)"
			},
			{
				"rank": "R061",
				"name": "Median(DNA.Pos) where Pos > 45.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 53,
				"max": 53,
				"mean": 53,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionMedian(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R062",
				"name": "Median(DNA.Pos) where Pos in ]15.5, 30.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 23,
				"max": 23,
				"mean": 23,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionMedian(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R063",
				"name": "Median(DNA.Pos) where Pos in ]30.5, 45.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 38,
				"max": 38,
				"mean": 38,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionMedian(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R064",
				"name": "Min(DNA.Pos)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 1,
				"max": 1,
				"mean": 1,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMin(DNA, Pos)"
			},
			{
				"rank": "R065",
				"name": "Min(DNA.Pos) where Char = C",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 21,
				"min": 1,
				"max": 36,
				"mean": 4.151815182,
				"stdDev": 4.732102465,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMin(`DNA where Char = C`, Pos)"
			},
			{
				"rank": "R066",
				"name": "Min(DNA.Pos) where Char = G",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 26,
				"min": 1,
				"max": 33,
				"mean": 4.715231788,
				"stdDev": 5.556903091,
				"missingNumber": 1,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMin(`DNA where Char = G`, Pos)"
			},
			{
				"rank": "R067",
				"name": "Min(DNA.Pos) where Char not in {C, G}",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 8,
				"min": 1,
				"max": 8,
				"mean": 2.254125413,
				"stdDev": 1.488606169,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMin(`DNA where Char not in {C, G}`, Pos)"
			},
			{
				"rank": "R068",
				"name": "Min(DNA.Pos) where Pos <= 15.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 1,
				"max": 1,
				"mean": 1,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionMin(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R069",
				"name": "Min(DNA.Pos) where Pos <= 30.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 1,
				"max": 1,
				"mean": 1,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMin(`DNA where Pos <= 30.5`, Pos)"
			},
			{
				"rank": "R070",
				"name": "Min(DNA.Pos) where Pos > 30.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 31,
				"max": 31,
				"mean": 31,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMin(`DNA where Pos > 30.5`, Pos)"
			},
			{
				"rank": "R071",
				"name": "Min(DNA.Pos) where Pos > 45.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 46,
				"max": 46,
				"mean": 46,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionMin(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R072",
				"name": "Min(DNA.Pos) where Pos in ]15.5, 30.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 16,
				"max": 16,
				"mean": 16,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionMin(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R073",
				"name": "Min(DNA.Pos) where Pos in ]30.5, 45.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 31,
				"max": 31,
				"mean": 31,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionMin(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R074",
				"name": "Mode(DNA.Char) where Char = C",
				"type": "Categorical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"mode": "C",
				"modeFrequency": 303,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMode(`DNA where Char = C`, Char)"
			},
			{
				"rank": "R075",
				"name": "Mode(DNA.Char) where Char = G",
				"type": "Categorical",
				"level": 0,
				"parts": 1,
				"values": 2,
				"mode": "G",
				"modeFrequency": 302,
				"missingNumber": 1,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMode(`DNA where Char = G`, Char)"
			},
			{
				"rank": "R076",
				"name": "Mode(DNA.Char) where Char not in {C, G}",
				"type": "Categorical",
				"level": 0,
				"parts": 1,
				"values": 2,
				"mode": "T",
				"modeFrequency": 153,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMode(`DNA where Char not in {C, G}`, Char)"
			},
			{
				"rank": "R077",
				"name": "Mode(DNA.Char) where Pos <= 15.5",
				"type": "Categorical",
				"level": 0,
				"parts": 1,
				"values": 4,
				"mode": "C",
				"modeFrequency": 129,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionMode(`TablePartition(DNA) per Pos(4)`, Char)"
			},
			{
				"rank": "R078",
				"name": "Mode(DNA.Char) where Pos > 30.5",
				"type": "Categorical",
				"level": 0,
				"parts": 1,
				"values": 4,
				"mode": "G",
				"modeFrequency": 110,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableMode(`DNA where Pos > 30.5`, Char)"
			},
			{
				"rank": "R079",
				"name": "Mode(DNA.Char) where Pos > 45.5",
				"type": "Categorical",
				"level": 0,
				"parts": 1,
				"values": 4,
				"mode": "C",
				"modeFrequency": 97,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionMode(`TablePartition(DNA) per Pos(4)`, Char)"
			},
			{
				"rank": "R080",
				"name": "Mode(DNA.Char) where Pos in ]30.5, 45.5]",
				"type": "Categorical",
				"level": 0,
				"parts": 1,
				"values": 4,
				"mode": "G",
				"modeFrequency": 102,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionMode(`TablePartition(DNA) per Pos(4)`, Char)"
			},
			{
				"rank": "R081",
				"name": "SampleId",
				"type": "Categorical",
				"level": 0,
				"parts": 1,
				"values": 303,
				"mode": "AGMRSKPNI-NEG-1141",
				"modeFrequency": 1,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926
			},
			{
				"rank": "R082",
				"name": "StdDev(DNA.Pos)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 17.31810228,
				"max": 17.31810228,
				"mean": 17.31810228,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableStdDev(DNA, Pos)"
			},
			{
				"rank": "R083",
				"name": "StdDev(DNA.Pos) where Char = C",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 300,
				"min": 5.465943945,
				"max": 21.52579848,
				"mean": 16.51728209,
				"stdDev": 2.350365912,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableStdDev(`DNA where Char = C`, Pos)"
			},
			{
				"rank": "R084",
				"name": "StdDev(DNA.Pos) where Char = G",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 301,
				"min": 8.314794193,
				"max": 21.35025371,
				"mean": 16.21388635,
				"stdDev": 2.414371221,
				"missingNumber": 1,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableStdDev(`DNA where Char = G`, Pos)"
			},
			{
				"rank": "R085",
				"name": "StdDev(DNA.Pos) where Char not in {C, G}",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 301,
				"min": 11.07066199,
				"max": 19.76587969,
				"mean": 17.01671662,
				"stdDev": 1.194228217,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableStdDev(`DNA where Char not in {C, G}`, Pos)"
			},
			{
				"rank": "R086",
				"name": "StdDev(DNA.Pos) where Pos <= 15.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 4.320493799,
				"max": 4.320493799,
				"mean": 4.320493799,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionStdDev(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R087",
				"name": "StdDev(DNA.Pos) where Pos <= 30.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 8.655441448,
				"max": 8.655441448,
				"mean": 8.655441448,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableStdDev(`DNA where Pos <= 30.5`, Pos)"
			},
			{
				"rank": "R088",
				"name": "StdDev(DNA.Pos) where Pos > 30.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 8.655441448,
				"max": 8.655441448,
				"mean": 8.655441448,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableStdDev(`DNA where Pos > 30.5`, Pos)"
			},
			{
				"rank": "R089",
				"name": "StdDev(DNA.Pos) where Pos > 45.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 4.320493799,
				"max": 4.320493799,
				"mean": 4.320493799,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionStdDev(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R090",
				"name": "StdDev(DNA.Pos) where Pos in ]15.5, 30.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 4.320493799,
				"max": 4.320493799,
				"mean": 4.320493799,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionStdDev(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R091",
				"name": "StdDev(DNA.Pos) where Pos in ]30.5, 45.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 4.320493799,
				"max": 4.320493799,
				"mean": 4.320493799,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionStdDev(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R092",
				"name": "Sum(DNA.Pos)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 1830,
				"max": 1830,
				"mean": 1830,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableSum(DNA, Pos)"
			},
			{
				"rank": "R093",
				"name": "Sum(DNA.Pos) where Char = C",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 233,
				"min": 54,
				"max": 1063,
				"mean": 488.0660066,
				"stdDev": 178.1871738,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableSum(`DNA where Char = C`, Pos)"
			},
			{
				"rank": "R094",
				"name": "Sum(DNA.Pos) where Char = G",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 250,
				"min": 111,
				"max": 938,
				"mean": 503.2649007,
				"stdDev": 169.8386146,
				"missingNumber": 1,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableSum(`DNA where Char = G`, Pos)"
			},
			{
				"rank": "R095",
				"name": "Sum(DNA.Pos) where Char not in {C, G}",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 255,
				"min": 309,
				"max": 1474,
				"mean": 840.330033,
				"stdDev": 216.9412705,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableSum(`DNA where Char not in {C, G}`, Pos)"
			},
			{
				"rank": "R096",
				"name": "Sum(DNA.Pos) where Pos <= 15.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 120,
				"max": 120,
				"mean": 120,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionSum(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R097",
				"name": "Sum(DNA.Pos) where Pos <= 30.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 465,
				"max": 465,
				"mean": 465,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableSum(`DNA where Pos <= 30.5`, Pos)"
			},
			{
				"rank": "R098",
				"name": "Sum(DNA.Pos) where Pos > 30.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 1365,
				"max": 1365,
				"mean": 1365,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TableSum(`DNA where Pos > 30.5`, Pos)"
			},
			{
				"rank": "R099",
				"name": "Sum(DNA.Pos) where Pos > 45.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 795,
				"max": 795,
				"mean": 795,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionSum(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R100",
				"name": "Sum(DNA.Pos) where Pos in ]15.5, 30.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 345,
				"max": 345,
				"mean": 345,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionSum(`TablePartition(DNA) per Pos(4)`, Pos)"
			},
			{
				"rank": "R101",
				"name": "Sum(DNA.Pos) where Pos in ]30.5, 45.5]",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1,
				"min": 570,
				"max": 570,
				"mean": 570,
				"stdDev": 0,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.7442,
				"dataCost": 296.926,
				"derivationRule": "TablePartitionSum(`TablePartition(DNA) per Pos(4)`, Pos)"
			}
		],
		"variablesDetailedStatistics": {
			"R001": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mode(DNA.Char) where Pos <= 30.5",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["C","T"],
								["G","A"]
							],
							"defaultGroupIndex": 1
						},
						{
							"variable": "Class",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["EI","IE","N"]
						}
					],
					"partTargetFrequencies": [
						[29,69,88],
						[38,0,79]
					],
					"partInterests": [0.247927,0.752073]
				},
				"inputValues": {
					"values": ["C","T","G","A"],
					"frequencies": [122,64,61,56]
				}
			},
			"R002": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mode(DNA.Char) where Pos in ]15.5, 30.5]",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["A","G"],
								["C"],
								["T"]
							],
							"defaultGroupIndex": 0
						},
						{
							"variable": "Class",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["EI","IE","N"]
						}
					],
					"partTargetFrequencies": [
						[38,3,87],
						[26,41,47],
						[3,25,33]
					],
					"partInterests": [0.593857,0.15488,0.251263]
				},
				"inputValues": {
					"values": ["C","A","T","G"],
					"frequencies": [114,69,61,59]
				}
			},
			"R003": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mode(DNA.Char)",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["C"],
								["T","A"],
								["G"]
							],
							"defaultGroupIndex": 1
						},
						{
							"variable": "Class",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["EI","IE","N"]
						}
					],
					"partTargetFrequencies": [
						[17,49,53],
						[16,17,74],
						[34,3,40]
					],
					"partInterests": [0.33703,0.144491,0.518478]
				},
				"inputValues": {
					"values": ["C","G","T","A"],
					"frequencies": [119,77,57,50]
				}
			},
			"R004": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mean(DNA.Pos) where Char = G",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[16,31.698],
								[31.698,46.55555556]
							]
						},
						{
							"variable": "Class",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["EI","IE","N"]
						}
					],
					"partTargetFrequencies": [
						[34,12,105],
						[33,57,62]
					],
					"partInterests": [0.57478,0.42522]
				}
			},
			"R005": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Median(DNA.Pos) where Char = G",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[8,27.75],
								[27.75,37.25],
								[37.25,48]
							]
						},
						{
							"variable": "Class",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["EI","IE","N"]
						}
					],
					"partTargetFrequencies": [
						[11,3,58],
						[44,31,86],
						[12,35,23]
					],
					"partInterests": [0.478566,0.0530889,0.468345]
				}
			},
			"R006": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Count(DNA) where Char = G",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,19.5],
								[19.5,32]
							]
						},
						{
							"variable": "Class",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["EI","IE","N"]
						}
					],
					"partTargetFrequencies": [
						[38,68,130],
						[29,1,37]
					],
					"partInterests": [0.187162,0.812838]
				}
			},
			"R007": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Median(DNA.Pos) where Char = C",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[9,27.75],
								[27.75,56.5]
							]
						},
						{
							"variable": "Class",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["EI","IE","N"]
						}
					],
					"partTargetFrequencies": [
						[35,53,62],
						[32,16,105]
					],
					"partInterests": [0.454456,0.545544]
				}
			}
		}
	},
	"treePreparationReport": {
		"reportType": "Preparation",
		"summary": {
			"dictionary": "SpliceJunction",
			"variables": {
				"types": [
					"Categorical",
					"Numerical",
					"Table"
				],
				"numbers": [
					12,
					90,
					1
				]
			},
			"database": "..\/..\/..\/MTdatasets\/SpliceJunction\/SpliceJunction.txt",
			"samplePercentage": 10,
			"samplingMode": "Include sample",
			"selectionVariable": "",
			"selectionValue": "",
			"instances": 303,
			"learningTask": "Classification analysis",
			"targetVariable": "Class",
			"targetDescriptiveStats": {
				"values": 3,
				"mode": "N",
				"modeFrequency": 167,
				"missingNumber": 0,
				"sparseMissingNumber": 0
			},
			"targetValues": {
				"values": ["EI","IE","N"],
				"frequencies": [67,69,167]
			},
			"evaluatedVariables": 2,
			"informativeVariables": 2,
			"selectedVariables": 1
		},
		"variablesStatistics": [
			{
				"rank": "R1",
				"name": "Tree_1",
				"type": "Categorical",
				"level": 0.0257056,
				"parts": 3,
				"values": 3,
				"mode": "L2",
				"modeFrequency": 128,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 29.2106,
				"preparationCost": 29.7139,
				"dataCost": 241.512,
				"derivationRule": "SwitchC(GroupIndex(ValueGroups(ValueGroup(\"C\", \"T\"), ValueGroup(\"A\", \"G\", \" * \")), `Mode(DNA.Char) where Pos in ]15.5, 30.5]`), \"L0\", SwitchC(IntervalIndex(IntervalBounds(34.75), `Median(DNA.Pos) where Char = G`), \"L0\", \"L3\", \"L4\"), \"L2\")"
			},
			{
				"rank": "R2",
				"name": "Tree_4",
				"type": "Categorical",
				"level": 0.020723,
				"parts": 2,
				"values": 3,
				"mode": "L1",
				"modeFrequency": 151,
				"missingNumber": 0,
				"sparseMissingNumber": 0,
				"constructionCost": 29.2106,
				"preparationCost": 21.7369,
				"dataCost": 251.026,
				"derivationRule": "SwitchC(IntervalIndex(IntervalBounds(31.698), `Mean(DNA.Pos) where Char = G`), \"L0\", \"L1\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"C\", \"T\"), ValueGroup(\"A\", \"G\", \" * \")), `Mode(DNA.Char) where Pos in ]15.5, 30.5]`), \"L0\", \"L3\", \"L4\"))"
			}
		],
		"variablesDetailedStatistics": {
			"R1": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Tree_1",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["L2"],
								["L4"],
								["L3"]
							],
							"defaultGroupIndex": 2
						},
						{
							"variable": "Class",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["EI","IE","N"]
						}
					],
					"partTargetFrequencies": [
						[38,3,87],
						[16,49,23],
						[13,17,57]
					],
					"partInterests": [0.468243,0.487083,0.0446743]
				},
				"inputValues": {
					"values": ["L2","L4","L3"],
					"frequencies": [128,88,87]
				}
			},
			"R2": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Tree_4",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["L1","L4"],
								["L3"]
							],
							"defaultGroupIndex": 0
						},
						{
							"variable": "Class",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["EI","IE","N"]
						}
					],
					"partTargetFrequencies": [
						[52,13,133],
						[15,56,34]
					],
					"partInterests": [0.453292,0.546708]
				},
				"inputValues": {
					"values": ["L1","L3","L4"],
					"frequencies": [151,105,47]
				}
			}
		},
		"treeDetails": {
			"R1": {
				"name": "Tree_1",
				"variableNumber": 2,
				"depth": 3,
				"treeNodes": {
					"nodeId": "L0",
					"variable": "Mode(DNA.Char) where Pos in ]15.5, 30.5]",
					"type": "Categorical",
					"partition": [
						["C","T"],
						["A","G"]
					],
					"defaultGroupIndex": 1,
					"childNodes": [
						{
							"nodeId": "L1",
							"variable": "Median(DNA.Pos) where Char = G",
							"type": "Numerical",
							"partition": [
								[8,34.75],
								[34.75,48]
							],
							"childNodes": [
								{
									"nodeId": "L3",
									"targetValues": {
										"values": ["EI","IE","N"],
										"frequencies": [13,17,57]
									}
								},
								{
									"nodeId": "L4",
									"targetValues": {
										"values": ["EI","IE","N"],
										"frequencies": [16,49,23]
									}
								}
							]
						},
						{
							"nodeId": "L2",
							"targetValues": {
								"values": ["EI","IE","N"],
								"frequencies": [38,3,87]
							}
						}
					]
				}
			},
			"R2": {
				"name": "Tree_4",
				"variableNumber": 2,
				"depth": 3,
				"treeNodes": {
					"nodeId": "L0",
					"variable": "Mean(DNA.Pos) where Char = G",
					"type": "Numerical",
					"partition": [
						[16,31.698],
						[31.698,46.55555556]
					],
					"childNodes": [
						{
							"nodeId": "L1",
							"targetValues": {
								"values": ["EI","IE","N"],
								"frequencies": [34,12,105]
							}
						},
						{
							"nodeId": "L2",
							"variable": "Mode(DNA.Char) where Pos in ]15.5, 30.5]",
							"type": "Categorical",
							"partition": [
								["C","T"],
								["A","G"]
							],
							"defaultGroupIndex": 1,
							"childNodes": [
								{
									"nodeId": "L3",
									"targetValues": {
										"values": ["EI","IE","N"],
										"frequencies": [15,56,34]
									}
								},
								{
									"nodeId": "L4",
									"targetValues": {
										"values": ["EI","IE","N"],
										"frequencies": [18,1,28]
									}
								}
							]
						}
					]
				}
			}
		}
	},
	"khiops_encoding": "ascii"
}
