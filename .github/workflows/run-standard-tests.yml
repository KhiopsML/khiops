---
name: Run Standard Tests
# Run minimal end-to-end tests for Khiops, Khiops Coclustering and KNITransfer
# Tests are lauched on Linux, Windows and macOS ; in serial and in parallel (3 procs)
# On release, it runs Standard test for binary. Plus MultiTables/SpliceJunction for KNITransfer
# On debug, it runs only Standard/Iris for Coclustering and KNITransfer and Standard/IrisLight for Khiops
# In case of errors, test results are available as artifacts for 7 days
# It is automatically triggered on PR when sources files are modified (files in src directory)
on:
  workflow_dispatch:
  pull_request:
    paths: [src/**]
env:
  KhiopsBatchMode: true
jobs:
  run-standard-tests:
    strategy:
      fail-fast: false
      matrix:
        build-setup:
          - {os: windows-2022, cmake-preset: windows-msvc}
          - {os: ubuntu-latest, cmake-preset: linux-gcc}
          - {os: macos-latest, cmake-preset: macos-clang}
        running-mode: [parallel, serial]
        config: [debug, release]
    runs-on: ${{ matrix.build-setup.os }}
    permissions:
      id-token: write
      contents: read
      checks: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build Khiops executables (parallel)
      # In parallel, build only MODL
        if: matrix.running-mode == 'parallel'
        uses: ./.github/actions/build-khiops
        with:
          preset-name: ${{ matrix.build-setup.cmake-preset }}-${{ matrix.config }}
          targets: MODL
          override-flags: -DBUILD_JARS=OFF -DTESTING=OFF
      - name: Build Khiops executables (serial)
      # In serial, build all binaries
        if: matrix.running-mode == 'serial'
        uses: ./.github/actions/build-khiops
        with:
          preset-name: ${{ matrix.build-setup.cmake-preset }}-${{ matrix.config }}
          targets: MODL MODL_Coclustering KNITransfer
          override-flags: -DBUILD_JARS=OFF -DTESTING=OFF
      - name: Set environment variables
        shell: bash
        run: |
          echo "TEST_PY=test/LearningTest/cmd/python/test_khiops.py" >> "$GITHUB_ENV"
          echo "APPLY_PY=test/LearningTest/cmd/python/apply_command.py" >> "$GITHUB_ENV"
          echo "BIN_PATH=${{ github.workspace }}/build/${{ matrix.build-setup.cmake-preset }}-${{ matrix.config }}/bin" >> "$GITHUB_ENV"
      - name: Run Tests
      # Run test on linux and macOS as describe in the top comment:
      # - In parallel, run only MODL tests
      # - In debug run only Standard/Iris for KNITRansfer and MODL_Coclustering, Standard/IrisLight for MODL
      # - In release run all Standard tests
        shell: bash
        run: |
          if [[ "${{ matrix.build-setup.os }}"  == 'windows-2022' ]]; then
            export EXT=".exe"
          fi
          if [[ "${{ matrix.running-mode }}" == "parallel" ]] ; then 
            export KhiopsMPIProcessNumber=3 
          fi
          if [[ "${{ matrix.config }}" == "release" ]] ; then
            python $TEST_PY Khiops ${BIN_PATH}/MODL${EXT} Standard
            if [[ "${{ matrix.running-mode }}" != "parallel" ]] ; then
              python $TEST_PY Coclustering ${BIN_PATH}/MODL_Coclustering${EXT} Standard
              python $TEST_PY KNI ${BIN_PATH}/KNITransfer${EXT} Standard
              python $TEST_PY KNI ${BIN_PATH}/KNITransfer${EXT} MultiTables SpliceJunction
            fi
          else
            python $TEST_PY Khiops ${BIN_PATH}/MODL${EXT} Standard IrisLight
            if [[ "${{ matrix.running-mode }}" != "parallel" ]] ; then
              python $TEST_PY Coclustering ${BIN_PATH}/MODL_Coclustering${EXT} Standard Iris
              python $TEST_PY KNI ${BIN_PATH}/KNITransfer${EXT} Standard Iris
            fi
          fi
      - name: Collect results
        shell: bash
        if: success() || failure()
        run: |
          if [[ "${{ matrix.config }}" == "release" ]] ; then
            python3 $APPLY_PY errors test/LearningTest/TestKhiops/Standard | tee test/LearningTest/TestKhiops/Standard/errors.txt
            if [[ "${{ matrix.running-mode }}" != "parallel" ]] ; then
              python $APPLY_PY errors test/LearningTest/TestCoclustering/Standard | tee test/LearningTest/TestCoclustering/Standard/errors.txt
              python $APPLY_PY errors test/LearningTest/TestKNITransfer/Standard | tee test/LearningTest/TestKNITransfer/Standard/errors.txt
              python $APPLY_PY errors test/LearningTest/TestKNITransfer/MultiTables SpliceJunction | tee test/LearningTest/TestKNITransfer/MultiTables/errors.txt
            fi
          else
            python3 $APPLY_PY errors test/LearningTest/TestKhiops/Standard IrisLight | tee test/LearningTest/TestKhiops/Standard/errors.txt
            if [[ "${{ matrix.running-mode }}" != "parallel" ]] ; then
              python $APPLY_PY errors test/LearningTest/TestCoclustering/Standard Iris | tee test/LearningTest/TestCoclustering/Standard/errors.txt
              python $APPLY_PY errors test/LearningTest/TestKNITransfer/Standard Iris | tee test/LearningTest/TestKNITransfer/Standard/errors.txt
            fi
          fi
      - name: Check results
        shell: bash
        run: |
          if grep -qr "error" --include="errors.txt" test/LearningTest/ ; then
            echo "::error::Errors in test"
            false
          fi
          if grep -qr "The test has not been launched" --include="errors.txt" test/LearningTest/ ; then
            echo "::error::Test not launched"
            false
          fi
      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.build-setup.cmake-preset }}-${{ matrix.config }}-${{ matrix.running-mode
            }}
          retention-days: 7
          path: |-
            test/LearningTest/**/results
            test/LearningTest/**/results.ref
            test/LearningTest/**/errors.txt
            test/LearningTest/**/comparisonResults.log
